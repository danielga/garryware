GM.DecorationData = {}

function GM:MapDecoration()
	if self.DecorationData.unusable then return end
	if self.DecorationData.unusable == nil then
		local tEnts = ents.FindByName("deco_center")
		if #tEnts > 0 then
			self.DecorationData.unusable = false
			self.DecorationData.fLastTriggered = 0
			
		else
			self.DecorationData.unusable = true
			return
			
		end
	end
	
end

function GM:CanDecorateMap()
	return not (self.DecorationData.unusable or false)
end

function GM:MakeDecorationForPlayer( ply )
	local rp = RecipientFilter()
	rp:AddPlayer(ply)
	
	self:MakeHarmonics( rp, Angle( 119, 199, 255 ) )
	self:MakeHarmonics( rp, Angle( 241, 197, 255 ) )
	self:MakeHarmonics( rp, Angle( 197, 255, 231 ) )
	
end

function GM:MakeHarmonics( rp, fakeAng )
	local origin = ents.FindByName("deco_center")[1]
	local extrema = ents.FindByName("deco_extrema")[1]
	local effectdata = EffectData()
	effectdata:SetOrigin( origin:GetPos() )
	effectdata:SetStart( extrema:GetPos() )
	effectdata:SetAngle( fakeAng )
	util.Effect( "deco_harmonics", effectdata , true, rp )
end
