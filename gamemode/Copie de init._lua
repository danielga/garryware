
AddCSLuaFile( "cl_init.lua" )
AddCSLuaFile( "shared.lua" )
AddCSLuaFile( "admin.lua" )
AddCSLuaFile( "cl_postprocess.lua" )
AddCSLuaFile( "vgui_ridiculous.lua" )

include( "shared.lua" )
include( "admin.lua" )
include( "tables.lua" )
include( "ply_extension.lua" )

resource.AddFile("sound/ware/crit_hit1.wav")
resource.AddFile("sound/ware/crit_hit2.wav")
resource.AddFile("sound/ware/crit_hit3.wav")
resource.AddFile("sound/ware/crit_hit4.wav")
resource.AddFile("sound/ware/crit_hit5.wav")

resource.AddFile("sound/ware/announcer_begins_1sec.wav")
resource.AddFile("sound/ware/announcer_begins_2sec.wav")
resource.AddFile("sound/ware/announcer_begins_3sec.wav")
resource.AddFile("sound/ware/announcer_begins_4sec.wav")
resource.AddFile("sound/ware/announcer_begins_5sec.wav")

resource.AddFile("sound/ware/game_new.wav")
resource.AddFile("sound/ware/game_lose.wav")
resource.AddFile("sound/ware/game_win.wav")

local minigames = {}
local minigames_Names = {}

function GM:PickRandomGame()
	self.WareHaveStarted = true
	self.TickAnnounce = 5
	
	for k,v in pairs(player.GetAll()) do 
		v:SetNWInt("ware_hasdestiny", 0 )
		v:SendLua( "LocalPlayer():EmitSound( \"" .. GAMEMODE.NewWareSound .. "\" );" );
	end
	
	local rand = math.random(1, table.Count(minigames_Names) )
	local name = minigames_Names[rand]
	minigames[name][1]()
	timer.Simple(self.Windup,minigames[name][2])
	
	self.NextgameEnd = CurTime() + self.Windup + self.WareLen
end

function registerMinigame(name, funcInit, funcAct)
	minigames[name] = { funcInit, funcAct }
	table.insert(minigames_Names,name)
end


registerMinigame("calc",function(self, args)
	GAMEMODE.Windup = 0
	GAMEMODE.WareLen = 8
	
	GAMEMODE.WareID = 2
	
	local a = math.random(10,99)
	local b = math.random(10,99)
	GAMEMODE.WareSolution = a + b
	
	for k,v in pairs(player.GetAll()) do 
		v:PrintMessage(HUD_PRINTCENTER , "Calculate and say : "..a.." + "..b.." = ?" )
		v:SetNWInt("ware_achieved", 0 )
	end
	return
end,function(self, args)
	return
end)

registerMinigame("chair",function(self, args)
	GAMEMODE.Windup = 0.7
	GAMEMODE.WareLen = 4
	
	for k,v in pairs(player.GetAll()) do 
		v:PrintMessage(HUD_PRINTCENTER , "Break 1 chair !")
		v:SetNWInt("ware_achieved", 0 )
	end
	return
end,function(self, args)
	GAMEMODE.WareID = 1
	
	local numberSpawns = math.Clamp(math.ceil(team.NumPlayers(TEAM_UNASSIGNED)*0.5),1,table.Count(GAMEMODE.EntsOnCrate))
	
	for i = 0, numberSpawns - 1 do
		local v = table.Random(GAMEMODE.EntsOnCrate)
		local ent = ents.Create ("prop_physics");
		ent:SetModel ("models/props_c17/FurnitureChair001a.mdl");
		ent:SetPos(v:GetPos()+Vector(0,0,24));
		ent:SetAngles(Angle(0,math.Rand(0,360),0) );
		ent:SetHealth(1)
		ent:Spawn(); 
		table.insert(GAMEMODE.WareEnts,ent)
	end
	local rand = math.random(1,2)
	for k,v in pairs(team.GetPlayers(TEAM_UNASSIGNED)) do 
		if rand == 1 then
			v:Give( "gmdm_pistol" )
			v:GiveAmmo( 12, "Pistol", true )	
		elseif rand == 2 then
			v:Give( "weapon_crowbar" )
		end
	end
	return
end)

/*
function GM:GAME_Chairs_Init()
	self.Windup = 0.7
	self.WareLen = 4
	
	for k,v in pairs(player.GetAll()) do 
		v:PrintMessage(HUD_PRINTCENTER , "Break 1 chair !")
		v:SetNWInt("ware_achieved", 0 )
	end
	
	//timer.Simple(self.Windup,GAMEMODE.Game_Chairs_Act,GAMEMODE)  
end

function GM:Game_Chairs_Act()
	self.WareID = 1
	
	local numberSpawns = math.Clamp(math.ceil(team.NumPlayers(TEAM_UNASSIGNED)*0.5),1,table.Count(GAMEMODE.EntsOnCrate))
	
	for i = 0, numberSpawns - 1 do
		local v = table.Random(GAMEMODE.EntsOnCrate)
		local ent = ents.Create ("prop_physics");
		ent:SetModel ("models/props_c17/FurnitureChair001a.mdl");
		ent:SetPos(v:GetPos()+Vector(0,0,24));
		ent:SetAngles(Angle(0,math.Rand(0,360),0) );
		ent:SetHealth(1)
		ent:Spawn(); 
		table.insert(GAMEMODE.WareEnts,ent)
	end
	
	//for k,v in pairs(GAMEMODE.EntsOnCrate) do
	//	local ent = ents.Create ("prop_physics");
	//	ent:SetModel ("models/props_c17/FurnitureChair001a.mdl");
	//	ent:SetPos(v:GetPos()+Vector(0,0,24));
	//	ent:SetAngles(Angle(0,math.Rand(0,360),0) );
	//	ent:SetHealth(1)
	//	ent:Spawn(); 
	//	table.insert(GAMEMODE.WareEnts,ent)
	//end
	local rand = math.random(1,2)
	for k,v in pairs(team.GetPlayers(TEAM_UNASSIGNED)) do 
		if rand == 1 then
			v:Give( "gmdm_pistol" )
			v:GiveAmmo( 12, "Pistol", true )	
		elseif rand == 2 then
			v:Give( "weapon_crowbar" )
		end
	end
end

function GM:GAME_Calc_Init()
	self.Windup = 0
	self.WareLen = 8
	
	self.WareID = 2
	
	local a = math.random(10,99)
	local b = math.random(10,99)
	self.WareSolution = a + b
	
	for k,v in pairs(player.GetAll()) do 
		v:PrintMessage(HUD_PRINTCENTER , "Calculate and say : "..a.." + "..b.." = ?" )
		v:SetNWInt("ware_achieved", 0 )
	end
end
*/

function GM:RemoveEnts()
	for k,v in pairs(GAMEMODE.WareEnts) do
		if (ValidEntity(v)) then v:Remove() end
	end
end
	
function GM:EndGame()
	self.WareHaveStarted = false
	self.WareID = 0
	
	self:RemoveEnts()
	for k,v in pairs(team.GetPlayers(TEAM_UNASSIGNED)) do 
		local achieved = v:GetNWInt("ware_achieved")
		local destiny = v:GetNWInt("ware_hasdestiny")
		
		if (destiny == 0) then
			if achieved >= 1 then
				self:WarePlayerDestinyWin( v )
			else
				self:WarePlayerDestinyLose( v )
			end
		end
		
		v:StripWeapons()
		v:RemoveAllAmmo( )
		
		if achieved >= 1 then
			v:SendLua( "LocalPlayer():EmitSound( \"" .. GAMEMODE.WinWareSound .. "\" );" );
		else
			v:SendLua( "LocalPlayer():EmitSound( \"" .. GAMEMODE.LoseWareSound .. "\" );" );
		end
	end
	self.NextgameStart = CurTime() + 2.7
end

function GM:WarePlayerDestinyWin( player )
	if player:Team() != TEAM_UNASSIGNED then return end
	player:SetNWInt("ware_achieved", 1 )
	player:SetNWInt("ware_hasdestiny", 1 )
	player:PrintMessage(HUD_PRINTCENTER , "Success !")
	player:SendLua( "LocalPlayer():EmitSound( \"" .. table.Random(GAMEMODE.WinTriggerSounds) .. "\" );" );
	
	player:AddFrags( 1 )
	
	local ed = EffectData()
	ed:SetOrigin( player:GetPos() )
	util.Effect("ware_good", ed, true, true)
end

function GM:WarePlayerDestinyLose( player )
	if player:Team() != TEAM_UNASSIGNED then return end
	player:SetNWInt("ware_achieved", 0 )
	player:SetNWInt("ware_hasdestiny", 1 )
	player:PrintMessage(HUD_PRINTCENTER , "Fail !")
	player:SendLua( "LocalPlayer():EmitSound( \"" .. table.Random(GAMEMODE.LoseTriggerSounds) .. "\" );" );
	
	player:AddDeaths( 1 )
	
	local ed = EffectData()
	ed:SetOrigin( player:GetPos() )
	util.Effect("ware_bad", ed, true, true)
end
	
function GM:Think()

	self.BaseClass:Think()
	
	if (self.GamesArePlaying == true && self.WareHaveStarted == false) then
		if (CurTime() > self.NextgameStart) then
			GAMEMODE:PickRandomGame()
		end
	elseif (self.GamesArePlaying == true && self.WareHaveStarted == true) then
		if (CurTime() > (self.NextgameEnd - (self.WareLen/6)*self.TickAnnounce )) then
			for k,v in pairs(player.GetAll()) do 
				if     self.TickAnnounce == 5 then v:SendLua( "LocalPlayer():EmitSound( \"" .. GAMEMODE.Left5 .. "\" );" );
				elseif self.TickAnnounce == 4 then v:SendLua( "LocalPlayer():EmitSound( \"" .. GAMEMODE.Left4 .. "\" );" );
				elseif self.TickAnnounce == 3 then v:SendLua( "LocalPlayer():EmitSound( \"" .. GAMEMODE.Left3 .. "\" );" );
				elseif self.TickAnnounce == 2 then v:SendLua( "LocalPlayer():EmitSound( \"" .. GAMEMODE.Left2 .. "\" );" );
				elseif self.TickAnnounce == 1 then v:SendLua( "LocalPlayer():EmitSound( \"" .. GAMEMODE.Left1 .. "\" );" );
				end
			end
			self.TickAnnounce = self.TickAnnounce - 1
		end
		if (CurTime() > self.NextgameEnd) then
			GAMEMODE:EndGame()
		end
	end
	
	if team.NumPlayers(TEAM_UNASSIGNED) > 0 && self.GamesArePlaying == false then
	
		self.GamesArePlaying = true
		self.WareHaveStarted = false
		
		self.NextgameStart = CurTime() + 8
		
	elseif team.NumPlayers(TEAM_UNASSIGNED) == 0 && self.GamesArePlaying == true then
		self.GamesArePlaying = false
		self:RemoveEnts()
	end
	
end

function GM:PropBreak( killer, prop )
	if self.WareID == 1 then
		if ( (killer:IsPlayer()       &&       killer:GetNWInt("ware_hasdestiny") == 0 ) 
		  || (killer:GetOwner():IsPlayer() && killer:GetOwner():GetNWInt("ware_hasdestiny") == 0 ) ) then
			self:WarePlayerDestinyWin( killer )
		end
	end
end

function GM:PlayerSay( ply, text, say )
	if self.WareID == 2 then
		if text == tostring(self.WareSolution) then
			self:WarePlayerDestinyWin( ply )
		else
			self:WarePlayerDestinyLose( ply )
		end
	end
	return text;
end 